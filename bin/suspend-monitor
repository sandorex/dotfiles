#!/bin/bash
# requires pactl pamixer xinput xset kdialog
# you must disable the screensaver before using this script


# mouse to disable when suspending screen
# use `xinput list` to get the name
MOUSE="pointer:USB Laser Game Mouse"

# if audio is playing through this sink screen wont be suspended
# use `pactl list short sinks` to get the name
MONITOR_SINK="alsa_output.pci-0000_01_00.1.hdmi-stereo"

function sink() {
	case $1 in
		playing)
			pactl list short sinks | grep "$MONITOR_SINK" | grep -q "RUNNING$"
		;;
		muted)
			pamixer --sink "$MONITOR_SINK" --get-mute  > /dev/null 2>&1
		;;
		on)
			sink playing && ! sink muted
	esac
}

function mouse() {
	case $1 in
		disable|off)
			xinput disable "$MOUSE"
		;;
		enable|on)
			xinput enable "$MOUSE"
		;;
		state|status)
			xinput list-props "$MOUSE" | grep "Device Enabled" | grep -q "1$"
		;;
		toggle)
			if mouse state; then
				mouse off
			else
				mouse on
			fi
		;;
	esac
}

function monitor() {
	case $1 in
		suspend|off)
			xset dpms force off
		;;
		wake|on)
			xset dpms force on
		;;
		state|status)
			xset q | grep Monitor | grep -q "On$"
		;;
	esac
}

if ! test "$DISPLAY"; then
	echo "Xorg display not found"
	exit 1
fi

if sink on && [[ ! "$1" =~ force ]]; then
	cat <<EOF
Audio is playing through the monitor ($MONITOR_SINK) and it wont be suspended
If you want to force suspend use '$0 force'
EOF
	exit 1
fi

# turn off the mouse
mouse off

# delay required
sleep 1

# make sure dpms is on
#xset +dpms

# turn monitor off
monitor off

if monitor state; then
	echo "Monitor did not turn off even though it should have"
	exit 1
fi

if ! mouse state; then
	# display message that delays enabling the mouse in the background
   { \
      kdialog --msgbox "Press enter to re-enable the mouse" > /dev/null 2>&1; \
      mouse on; \
   } &
else
	echo "Mouse wasn't disabled even though it should've been"
	exit 1
fi
