# dotfiles installer
# most of the configuration is contained in presets.mk
include presets.mk

# TODO ignores any file install.mk
define STOW_FLAGS
--ignore="install.mk"	\
-v								\
--simulate
endef

define FIND_FLAGS
-maxdepth 1						\
-type d							\
! -path "."						\
! -path "./.*"					\
! -path "$(MANUAL_PATH)"	\
! -path "$(OTHER_PATH)"		\
-exec basename {} \;
endef

# stow flags
STOW_USER_FLAGS	:= $(STOW_FLAGS) --dir="$(OTHER_PATH)" --target="$(PWD)/.."
RESTOW_USER_FLAGS	:= $(STOW_USER_FLAGS) --restow
DESTOW_USER_FLAGS	:= $(STOW_USER_FLAGS) --delete

STOW_ROOT_FLAGS	:= $(STOW_FLAGS) --dir="$(OTHER_PATH)" --target="/"
RESTOW_ROOT_FLAGS	:= $(STOW_ROOT_FLAGS) --restow
DESTOW_ROOT_FLAGS	:= $(STOW_ROOT_FLAGS) --delete

# names of configs
BASIC 				:= $(shell find . $(FIND_FLAGS))
MANUAL				:= $(shell find $(MANUAL_PATH) $(FIND_FLAGS))
OTHER 				:= $(shell find $(OTHER_PATH)	$(FIND_FLAGS))

# prefixes for different actions
STOW_USER			:= user.stow.
RESTOW_USER			:= user.restow.
DESTOW_USER			:= user.remove.
STOW_ROOT			:= root.stow.
RESTOW_ROOT			:= root.restow.
DESTOW_ROOT			:= root.remove.

.DEFAULT_GOAL := configs

define

# use sudo sudo if not root
ifneq ($(shell id -u -r),0)
	SUDO				:= /usr/bin/sudo
endif

# include makefiles
-include ./*/install.mk $(OTHER_PATH)/*/install.mk

# restow, let makefiles add dependencies
restow: ;

# normal stow
.PHONY: $(BASIC)
$(BASIC): % :
	/usr/bin/stow $(STOW_FLAGS) $@

# manual
.PHONY: $(MANUAL)
$(MANUAL): % :
	@if [ -f "$(MANUAL_PATH)/$@/README.md" ]; then cat "$(MANUAL_PATH)/$@/README.md"; echo; else echo "no manual found for '$@'"; fi

# do nothing, let the makefiles add dependencies
.PHONY: $(OTHER)
$(OTHER): % : ;

# stow normally
.PHONY: $(addprefix $(STOW_USER),$(OTHER))
$(addprefix $(STOW_USER),$(OTHER)): $(STOW_USER)% :
	/usr/bin/stow $(STOW_USER_FLAGS) $*

# stow root
.PHONY: $(addprefix $(STOW_ROOT),$(OTHER))
$(addprefix $(STOW_ROOT),$(OTHER)): $(STOW_ROOT)% :
	$(SUDO) /usr/bin/stow $(STOW_ROOT_FLAGS) $*

# restow normally
.PHONY: $(addprefix $(RESTOW_USER),$(OTHER))
$(addprefix $(RESTOW_USER),$(OTHER)): $(RESTOW_USER)% :
	/usr/bin/stow $(RESTOW_USER_FLAGS) $*

# restow root
.PHONY: $(addprefix $(RESTOW_ROOT),$(OTHER))
$(addprefix $(RESTOW_ROOT),$(OTHER)): $(RESTOW_ROOT)% :
	$(SUDO) /usr/bin/stow $(RESTOW_ROOT_FLAGS) $*

# stow remove normally
.PHONY: $(addprefix $(DESTOW_USER),$(OTHER))
$(addprefix $(DESTOW_USER),$(OTHER)): $(DESTOW_USER)% :
	/usr/bin/stow $(DESTOW_USER_FLAGS) $*

# stow remote root
.PHONY: $(addprefix $(DESTOW_ROOT),$(OTHER))
$(addprefix $(DESTOW_ROOT),$(OTHER)): $(DESTOW_ROOT)% :
	$(SUDO) /usr/bin/stow $(DESTOW_ROOT_FLAGS) $*

# list available configs
.PHONY: configs
configs:
	@echo -e "$(BASIC)\n"

	@echo "manual ($(MANUAL_PATH)):"
	@echo -e "   $(MANUAL)\n"

	@echo "other ($(OTHER_PATH)):"
	@echo -e "   $(OTHER)\n"

# remove basic, let makefiles remove rest
.PHONY: uninstall
uninstall:
	stow -D */
