#!/bin/bash
# requires pactl pamixer xinput xset kdialog
#
# kde-connect disable 'Inhibit Screensaver' in plugins on PC
# dpms s off -dpms

# mouse to disable when suspending screen
# use `xinput list` to get the name or id
MOUSE="pointer:USB Laser Game Mouse"

# if audio is playing through this sink screen wont be suspended
# use `pactl list short sinks` to get the name or id
# this is not required
# MONITOR_SINK="alsa_output.pci-0000_01_00.1.hdmi-stereo"

function error {
   echo -e "(${FUNCNAME[0]}) [error] $*"
   exit 1
}

function sink {
   case $1 in
      playing)
         pactl list short sinks | grep "$MONITOR_SINK" | grep -q "RUNNING$"
      ;;
      muted)
         pamixer --sink "$MONITOR_SINK" --get-mute  > /dev/null 2>&1
      ;;
   esac
}

function mouse {
   case $1 in
      off)
         xinput disable "$MOUSE"

         mouse state && error "mouse couldn't be disabled"
      ;;
      on)
         xinput enable "$MOUSE"

         mouse state || error "mouse couldn't be disabled"
      ;;
      state)
         xinput list-props "$MOUSE" | grep "Device Enabled" | grep -q "1$"
      ;;
   esac
}

function monitor {
   case $1 in
      off)
         sleep 0.2; xset dpms force off

         monitor state && error "monitor couldn't be suspended"
      ;;
      on)
         xset dpms force on

         monitor state || error "monitor didn't wake up"
      ;;
      state)
         xset q | tail -n1 | grep -Eq "Disabled|On$"
      ;;
   esac
}

function dpms {
   case $1 in
      on)
         xset +dpms
      ;;
      off)
         xset -dpms
      ;;
      state)
         ! xset q | tail -n1 | grep -Eq "Disabled"
      ;;
   esac
}

# check for xorg
if ! xhost >& /dev/null; then
   error "xorg not found"
   exit 1
fi

if ! dpms state; then
   # make sure dpms is on
   dpms on

   DPMS_STATE="1"
fi

# check if monitor is already off
if ! monitor state; then
   echo "Monitor is already off"
   exit 1
fi

# check if audio is playing
if [[ -n "$MONITOR_SINK" ]] && sink playing && ! sink muted && [[ ! "$1" =~ force ]]; then
   cat <<EOF
Audio is playing through the monitor ($MONITOR_SINK) and it wont be suspended
If you want to force suspend use '$0 force'
EOF
   exit 1
fi

# turn off the mouse
mouse off

# turn monitor off
monitor off

# watch monitor state
# turn mouse on when monitor wakes up
{
   while ! monitor state; do
      # may seem like a lot but waking is actually really long
      sleep 3s
   done

   # revert dpms state
   if [ -n "$DPMS_STATE" ]; then
      dpms off
   fi

   # turn the mouse back on
   mouse on
} &
